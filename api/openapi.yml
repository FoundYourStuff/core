openapi: 3.0.1

info:
  title: FoundYourStuff
  version: ""

paths:
  /users:    
    post:
      description: create new user
      operationId: handlers.createNewUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - type: object
                  required: [email, password, name, phone_number, contact]
      responses:
        "200": 
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: An error occured with user creation
          
  /users/{user_guid}:
    get:
      description: get user info
      operationId: handlers.getUserByGuid
      parameters:
        - name: user_guid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200": 
          description: 200 ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: A user with the specified ID was not found.
    patch:
      description: update existing user
      operationId: handlers.updateUserByGuid
      parameters:
        - name: user_guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200": 
          description: Updated
        "404":
          description: A user with the specified ID was not found.
 
  /users/{user_guid}/tags:
      get:
        description: get all tags associated with a given user
        operationId: handlers.getAllUsersTags
        parameters:
          - name: user_guid
            in: path
            required: true
            schema:
              type: string
        responses:
          "200": 
            description: 200 ok
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
          "404":
            description: A tag with the specified ID was not found
  /tags/{user_guid}:
    post:
      description: Creates a tag associated to the given User
      operationId: handlers.createNewTag
      parameters:
        - name: user_guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - type: object
                  required: [name]
      responses:
        "200": 
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag' 

  /tags/{tag_guid}:
    get:
      description: get a single tags info
      operationId: handlers.getTagByGuid
      parameters:
        - name: tag_guid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200": 
          description: 200 ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        "404":
          description: A tag with the specified ID was not found
          
    patch:
      description: update existing tag
      operationId: handlers.updateTagByGuid
      parameters:
        - name: tag_guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "200": 
          description: Updated
        "404":
          description: A tag with the specified ID was not found.
  /tags/{external_id}/users:
    get:
      description: if user marked public, returns the users contact info
      operationId: handlers.getUserByExternalID
      parameters:
        - name: external_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200": 
          description: 200 ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone:
                    type: integer
                  email: 
                    type: string
                    format: email
        "404":
          description: A user with the specified ID was not found.
  


components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        name:
          type: string
        phone_number:
          type: integer
        contact:
          type: boolean
        active: 
          type: boolean
    Tag:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
        picture:
          type: string
        active:
          type: boolean
    Message:
      type: object
      required:
        - tag_id
        - time_stamp
        - body
        - read
      properties:
        tag_id:
          type: string
        time_stamp:
          type: string
        body:
          type: string
        picture:
          type: string
        read:
          type: boolean

      
      